// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScienceBook.Web.Data;

namespace ScienceBook.Web.Migrations
{
    [DbContext(typeof(SBContext))]
    partial class SBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "6.0.0-preview.3.21201.2")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EventUser", b =>
                {
                    b.Property<int>("EventsId")
                        .HasColumnType("int");

                    b.Property<string>("ParticipantsId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("EventsId", "ParticipantsId");

                    b.HasIndex("ParticipantsId");

                    b.ToTable("EventUser");
                });

            modelBuilder.Entity("FieldOfStudyUser", b =>
                {
                    b.Property<int>("FieldsOfStudyId")
                        .HasColumnType("int");

                    b.Property<string>("UsersId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("FieldsOfStudyId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("FieldOfStudyUser");
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.Property<int>("RolesId")
                        .HasColumnType("int");

                    b.Property<string>("UsersId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RolesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("RoleUser");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.CategoryOfScienceClub", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoriesOfScienceClub");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.CategoryOfTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ScienceClubId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScienceClubId");

                    b.ToTable("CategoriesOfTask");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UniversityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UniversityId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.Election", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountOfChoices")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ScienceClubId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDay")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ScienceClubId");

                    b.ToTable("Elections");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ScienceClubId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDay")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ScienceClubId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.FieldOfStudy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FieldOfStudies");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.Fundraising", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDay")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Goal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SciencClubId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SciencClubId");

                    b.ToTable("Fundraisings");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.MailingList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ScienceClubId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScienceClubId");

                    b.ToTable("MailingLists");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.MembershipDeclaration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ConsiderationDay")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("Interests")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsSigned")
                        .HasColumnType("int");

                    b.Property<int?>("ScienceClubId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ScienceClubId");

                    b.HasIndex("UserId");

                    b.ToTable("MembershipDeclarations");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.OptionsInElection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ElectionId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ElectionId");

                    b.ToTable("OptionsInElections");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublicationDay")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ScienceClubId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ScienceClubId");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ScienceClubId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScienceClubId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.ScienceClub", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryOfScienceClubId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryOfScienceClubId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("ScienceClubs");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryOfTaskId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ScienceClubId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDay")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TaskStateId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryOfTaskId");

                    b.HasIndex("ScienceClubId");

                    b.HasIndex("TaskStateId");

                    b.HasIndex("UserId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.TaskState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaskStates");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.University", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Universities");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("JoinDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.Vote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OptionInElectionId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("OptionInElectionId");

                    b.HasIndex("UserId");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("ScienceClubUser", b =>
                {
                    b.Property<int>("ScienceClubsId")
                        .HasColumnType("int");

                    b.Property<string>("UsersId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ScienceClubsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("ScienceClubUser");
                });

            modelBuilder.Entity("EventUser", b =>
                {
                    b.HasOne("ScienceBook.Web.Data.Entities.Event", null)
                        .WithMany()
                        .HasForeignKey("EventsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScienceBook.Web.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("ParticipantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FieldOfStudyUser", b =>
                {
                    b.HasOne("ScienceBook.Web.Data.Entities.FieldOfStudy", null)
                        .WithMany()
                        .HasForeignKey("FieldsOfStudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScienceBook.Web.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.HasOne("ScienceBook.Web.Data.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScienceBook.Web.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.CategoryOfTask", b =>
                {
                    b.HasOne("ScienceBook.Web.Data.Entities.ScienceClub", "ScienceClub")
                        .WithMany("CategoriesOfTasks")
                        .HasForeignKey("ScienceClubId");

                    b.Navigation("ScienceClub");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.Department", b =>
                {
                    b.HasOne("ScienceBook.Web.Data.Entities.University", "University")
                        .WithMany("Departments")
                        .HasForeignKey("UniversityId");

                    b.Navigation("University");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.Election", b =>
                {
                    b.HasOne("ScienceBook.Web.Data.Entities.ScienceClub", "ScienceClub")
                        .WithMany("Elections")
                        .HasForeignKey("ScienceClubId");

                    b.Navigation("ScienceClub");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.Event", b =>
                {
                    b.HasOne("ScienceBook.Web.Data.Entities.ScienceClub", "ScienceClub")
                        .WithMany("Events")
                        .HasForeignKey("ScienceClubId");

                    b.Navigation("ScienceClub");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.Fundraising", b =>
                {
                    b.HasOne("ScienceBook.Web.Data.Entities.ScienceClub", "SciencClub")
                        .WithMany("Fundraisings")
                        .HasForeignKey("SciencClubId");

                    b.Navigation("SciencClub");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.MailingList", b =>
                {
                    b.HasOne("ScienceBook.Web.Data.Entities.ScienceClub", "ScienceClub")
                        .WithMany("MailingList")
                        .HasForeignKey("ScienceClubId");

                    b.Navigation("ScienceClub");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.MembershipDeclaration", b =>
                {
                    b.HasOne("ScienceBook.Web.Data.Entities.ScienceClub", "ScienceClub")
                        .WithMany("MembershipDeclarations")
                        .HasForeignKey("ScienceClubId");

                    b.HasOne("ScienceBook.Web.Data.Entities.User", "User")
                        .WithMany("MembershipDeclarations")
                        .HasForeignKey("UserId");

                    b.Navigation("ScienceClub");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.OptionsInElection", b =>
                {
                    b.HasOne("ScienceBook.Web.Data.Entities.Election", "Election")
                        .WithMany("OptionsInElection")
                        .HasForeignKey("ElectionId");

                    b.Navigation("Election");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.Post", b =>
                {
                    b.HasOne("ScienceBook.Web.Data.Entities.ScienceClub", "ScienceClub")
                        .WithMany("Post")
                        .HasForeignKey("ScienceClubId");

                    b.HasOne("ScienceBook.Web.Data.Entities.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId");

                    b.Navigation("ScienceClub");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.Role", b =>
                {
                    b.HasOne("ScienceBook.Web.Data.Entities.ScienceClub", "ScienceClub")
                        .WithMany("Roles")
                        .HasForeignKey("ScienceClubId");

                    b.Navigation("ScienceClub");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.ScienceClub", b =>
                {
                    b.HasOne("ScienceBook.Web.Data.Entities.CategoryOfScienceClub", "CategoryOfScienceClub")
                        .WithMany("ScienceClubs")
                        .HasForeignKey("CategoryOfScienceClubId");

                    b.HasOne("ScienceBook.Web.Data.Entities.Department", "Department")
                        .WithMany("ScienceBooks")
                        .HasForeignKey("DepartmentId");

                    b.Navigation("CategoryOfScienceClub");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.Task", b =>
                {
                    b.HasOne("ScienceBook.Web.Data.Entities.CategoryOfTask", "CategoryOfTask")
                        .WithMany("Tasks")
                        .HasForeignKey("CategoryOfTaskId");

                    b.HasOne("ScienceBook.Web.Data.Entities.ScienceClub", "ScienceClub")
                        .WithMany("Tasks")
                        .HasForeignKey("ScienceClubId");

                    b.HasOne("ScienceBook.Web.Data.Entities.TaskState", "TaskState")
                        .WithMany("Tasks")
                        .HasForeignKey("TaskStateId");

                    b.HasOne("ScienceBook.Web.Data.Entities.User", "User")
                        .WithMany("Tasks")
                        .HasForeignKey("UserId");

                    b.Navigation("CategoryOfTask");

                    b.Navigation("ScienceClub");

                    b.Navigation("TaskState");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.Vote", b =>
                {
                    b.HasOne("ScienceBook.Web.Data.Entities.OptionsInElection", "OptionInElection")
                        .WithMany("Votes")
                        .HasForeignKey("OptionInElectionId");

                    b.HasOne("ScienceBook.Web.Data.Entities.User", "User")
                        .WithMany("Votes")
                        .HasForeignKey("UserId");

                    b.Navigation("OptionInElection");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ScienceClubUser", b =>
                {
                    b.HasOne("ScienceBook.Web.Data.Entities.ScienceClub", null)
                        .WithMany()
                        .HasForeignKey("ScienceClubsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScienceBook.Web.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.CategoryOfScienceClub", b =>
                {
                    b.Navigation("ScienceClubs");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.CategoryOfTask", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.Department", b =>
                {
                    b.Navigation("ScienceBooks");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.Election", b =>
                {
                    b.Navigation("OptionsInElection");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.OptionsInElection", b =>
                {
                    b.Navigation("Votes");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.ScienceClub", b =>
                {
                    b.Navigation("CategoriesOfTasks");

                    b.Navigation("Elections");

                    b.Navigation("Events");

                    b.Navigation("Fundraisings");

                    b.Navigation("MailingList");

                    b.Navigation("MembershipDeclarations");

                    b.Navigation("Post");

                    b.Navigation("Roles");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.TaskState", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.University", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("ScienceBook.Web.Data.Entities.User", b =>
                {
                    b.Navigation("MembershipDeclarations");

                    b.Navigation("Posts");

                    b.Navigation("Tasks");

                    b.Navigation("Votes");
                });
#pragma warning restore 612, 618
        }
    }
}
